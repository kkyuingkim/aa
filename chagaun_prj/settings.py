"""
Django settings for chagaun_prj project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$1@$k*u-*a-)ld+jzrhc%=pg(wc5zw_=-a!xf$d408#6p)0!h*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["www.chagaun.net", "chagaun.net", "www.epintos.com", "epintos.com", "127.0.0.1", "localhost"]


# Application definition

INSTALLED_APPS = [
    # 'admin_interface',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # 'debug_toolbar',
    'django_summernote', # 썸머노트 에디터
    'page',
    'category',
    'board',
    'library',
    'member',
    'product',
    'payment',
    'solution',
    'inquiry',
    'search.apps.SearchConfig',
    'feedback.apps.FeedbackConfig',
    'learnus.apps.LearnusConfig',
    'clipper.apps.ClipperConfig',
    'clipliner.apps.CliplinerConfig',
    'clipporter.apps.ClipporterConfig',
    'cliptrailer.apps.CliptrailerConfig',
    'clipvoicer.apps.ClipvoicerConfig',
    'login.apps.LoginConfig',
    'main.apps.MainConfig',
    'download.apps.DownloadConfig',
    'klicker.apps.KlickerConfig',
    'recipe.apps.RecipeConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'chagaun_prj.urls'
DEFAULT_AUTO_FIELD='django.db.models.AutoField'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chagaun_prj.wsgi.application'
DATA_UPLOAD_MAX_MEMORY_SIZE = 20240000


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'chagaun',
        'USER': 'chagaun_user',
        'PASSWORD': 'chagaun4!!',
        'HOST': '127.0.0.1',
        'PORT': '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

THUMB_WIDTH = 100

PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

# STATICFILES_DIRS : 개발할 때 필요한 정적파일들이 관리되는 폴더
# STATIC_ROOT : STATICFILES_DIRS 에 있는 파일들과 settings.py 에 들어있는 INSTALLED_APPS에 있는 앱들과 관련한 static 파일들을 모두 모아
# 'python manage.py collectstatic' 명령어를 통해 STATIC_ROOT 에 모아진다

STATIC_URL = '/static/'
if DEBUG == True:
    # STATIC_ROOT = BASE_DIR
    STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"), )
else:
    STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

COMPANY_KNAME = "차가운 AI마케팅연구소"
COMPANY_ENAME = "Chagaun Inc."
BUY_SOLUTION = { "RpaTool" : "RPA솔루션", "ShopFinder" : "이메일솔루션", "IdFunnel" : "아이디퍼널"}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "smtp.gmail.com"
EMAIL_HOST_USER = 'chagaun.help@gmail.com'
EMAIL_HOST_PASSWORD = 'wmgldehgdrombjhr'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
DOWNLOAD_PATH = os.path.join(BASE_DIR, 'download')


# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# )